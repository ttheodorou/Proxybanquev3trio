# Root logger option
    log4j.rootLogger=DEBUG, stdout, file

# Redirect log messages to console
    log4j.appender.stdout=org.apache.log4j.ConsoleAppender
    log4j.appender.stdout.Target=System.out
    log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
    log4j.appender.stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n

# Redirect log messages to a log file, support file rolling.
# Rolling File Appender  (PENSEZ A METTRE UN LECTEUR OU ON PEUT ECRIRE !!! c'est con mais même le C des fois c'est pas possible)

    log4j.appender.file=org.apache.log4j.RollingFileAppender
    log4j.appender.file.File=C:\\log4j-application.log

#Une jolie tentative de cowboy où j'ai magnifiquement fail !!! hahaha (utiliser la librairie maven apache-log4j-extras)
    #log4j.appender.file=org.apache.log4j.rolling.RollingFileAppender
    #log4j.appender.file.rollingPolicy=org.apache.log4j.rolling.TimeBasedRollingPolicy
    #log4j.appender.file.rollingPolicy.FileNamePattern=./log/monlog_%d{yyyy-MM-dd}_%d{HH-mm-ss}.log -- TimeStamp

# Rolling File Appender layout
    #log4j.appender.file.MaxFileSize=5MB
    #log4j.appender.file.MaxBackupIndex=10
    log4j.appender.file.encoding=UTF-8
    log4j.appender.file.layout=org.apache.log4j.PatternLayout
    log4j.appender.file.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n